// This file is @generated by prost-build.
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SailingEquipMultiReply {
    ///
    #[prost(map = "int64, message", tag = "1")]
    pub data: ::std::collections::HashMap<i64, super::model::UserSailing>,
}
impl ::prost::Name for SailingEquipMultiReply {
    const NAME: &'static str = "SailingEquipMultiReply";
    const PACKAGE: &'static str = "bilibili.vas.garb.service";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.vas.garb.service.SailingEquipMultiReply".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.vas.garb.service.SailingEquipMultiReply".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SailingEquipMultiReq {
    ///
    #[prost(int64, repeated, tag = "1")]
    pub mids: ::prost::alloc::vec::Vec<i64>,
    ///
    #[prost(int64, tag = "2")]
    pub up_mid: i64,
    ///
    #[prost(int64, tag = "3")]
    pub otype: i64,
    ///
    #[prost(int64, tag = "4")]
    pub oid: i64,
    ///
    #[prost(int64, tag = "5")]
    pub mid: i64,
    ///
    #[prost(message, optional, tag = "6")]
    pub device: ::core::option::Option<super::super::super::metadata::device::Device>,
}
impl ::prost::Name for SailingEquipMultiReq {
    const NAME: &'static str = "SailingEquipMultiReq";
    const PACKAGE: &'static str = "bilibili.vas.garb.service";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.vas.garb.service.SailingEquipMultiReq".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.vas.garb.service.SailingEquipMultiReq".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UserCard {
    ///
    #[prost(int64, tag = "1")]
    pub id: i64,
    ///
    #[prost(int64, tag = "2")]
    pub item_id: i64,
    ///
    #[prost(string, tag = "3")]
    pub name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub card_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub big_card_url: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "6")]
    pub card_type: i64,
    ///
    #[prost(int64, tag = "7")]
    pub expire_time: i64,
    ///
    #[prost(string, tag = "8")]
    pub card_type_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "9")]
    pub jump_url: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "10")]
    pub fan: ::core::option::Option<super::model::UserFanShow>,
    ///
    #[prost(string, tag = "12")]
    pub image_enhance: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "13")]
    pub image_group: ::core::option::Option<super::model::ImageGroup>,
}
impl ::prost::Name for UserCard {
    const NAME: &'static str = "UserCard";
    const PACKAGE: &'static str = "bilibili.vas.garb.service";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.vas.garb.service.UserCard".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.vas.garb.service.UserCard".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UserCardMultiReply {
    ///
    #[prost(map = "int64, message", tag = "1")]
    pub cards: ::std::collections::HashMap<i64, UserCard>,
}
impl ::prost::Name for UserCardMultiReply {
    const NAME: &'static str = "UserCardMultiReply";
    const PACKAGE: &'static str = "bilibili.vas.garb.service";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.vas.garb.service.UserCardMultiReply".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.vas.garb.service.UserCardMultiReply".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UserCardMultiReq {
    ///
    #[prost(int64, repeated, tag = "1")]
    pub mids: ::prost::alloc::vec::Vec<i64>,
    ///
    #[prost(message, optional, tag = "2")]
    pub device: ::core::option::Option<super::super::super::metadata::device::Device>,
}
impl ::prost::Name for UserCardMultiReq {
    const NAME: &'static str = "UserCardMultiReq";
    const PACKAGE: &'static str = "bilibili.vas.garb.service";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.vas.garb.service.UserCardMultiReq".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.vas.garb.service.UserCardMultiReq".into()
    }
}
