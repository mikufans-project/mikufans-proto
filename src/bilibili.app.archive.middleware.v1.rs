// This file is @generated by prost-build.
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct PlayerArgs {
    ///
    #[prost(int64, tag = "1")]
    pub qn: i64,
    ///
    #[prost(int64, tag = "2")]
    pub fnver: i64,
    ///
    #[prost(int64, tag = "3")]
    pub fnval: i64,
    ///
    #[prost(int64, tag = "4")]
    pub force_host: i64,
    ///
    #[prost(int64, tag = "5")]
    pub voice_balance: i64,
    ///
    #[prost(enumeration = "QnPolicy", tag = "6")]
    pub qn_policy: i32,
    ///
    #[prost(int64, tag = "7")]
    pub client_attr: i64,
}
impl ::prost::Name for PlayerArgs {
    const NAME: &'static str = "PlayerArgs";
    const PACKAGE: &'static str = "bilibili.app.archive.middleware.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.app.archive.middleware.v1.PlayerArgs".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.app.archive.middleware.v1.PlayerArgs".into()
    }
}
///
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum QnPolicy {
    ///
    Default = 0,
    ///
    AutoQnEnable = 1,
}
impl QnPolicy {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Default => "QN_POLICY_DEFAULT",
            Self::AutoQnEnable => "QN_POLICY_AUTO_QN_ENABLE",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "QN_POLICY_DEFAULT" => Some(Self::Default),
            "QN_POLICY_AUTO_QN_ENABLE" => Some(Self::AutoQnEnable),
            _ => None,
        }
    }
}
