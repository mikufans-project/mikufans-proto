// This file is @generated by prost-build.
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct InteractWord {
    ///
    #[prost(int64, tag = "1")]
    pub uid: i64,
    ///
    #[prost(string, tag = "2")]
    pub uname: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub uname_color: ::prost::alloc::string::String,
    ///
    #[prost(int64, repeated, tag = "4")]
    pub identities: ::prost::alloc::vec::Vec<i64>,
    ///
    #[prost(int64, tag = "5")]
    pub msg_type: i64,
    ///
    #[prost(int64, tag = "6")]
    pub roomid: i64,
    ///
    #[prost(int64, tag = "7")]
    pub timestamp: i64,
    ///
    #[prost(int64, tag = "8")]
    pub score: i64,
    ///
    #[prost(message, optional, tag = "9")]
    pub fans_medal: ::core::option::Option<interact_word::FansMedalInfo>,
    ///
    #[prost(int64, tag = "10")]
    pub is_spread: i64,
    ///
    #[prost(string, tag = "11")]
    pub spread_info: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "12")]
    pub contribution: ::core::option::Option<interact_word::ContributionInfo>,
    ///
    #[prost(string, tag = "13")]
    pub spread_desc: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "14")]
    pub tail_icon: i64,
    ///
    #[prost(int64, tag = "15")]
    pub trigger_time: i64,
    ///
    #[prost(int64, tag = "16")]
    pub privilege_type: i64,
    ///
    #[prost(int64, tag = "17")]
    pub core_user_type: i64,
    ///
    #[prost(string, tag = "18")]
    pub tail_text: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "19")]
    pub contribution_v2: ::core::option::Option<interact_word::ContributionInfoV2>,
    ///
    #[prost(message, optional, tag = "20")]
    pub group_medal: ::core::option::Option<
        super::super::component::common_model::fans_club::GroupMedalBrief,
    >,
    ///
    #[prost(bool, tag = "21")]
    pub is_mystery: bool,
    ///
    #[prost(message, optional, tag = "22")]
    pub uinfo: ::core::option::Option<
        super::super::component::common_model::user_dagw::UserInfo,
    >,
    ///
    #[prost(message, optional, tag = "23")]
    pub relation_tail: ::core::option::Option<interact_word::UserAnchorRelation>,
}
/// Nested message and enum types in `InteractWord`.
pub mod interact_word {
    ///
    #[derive(Clone, Copy, PartialEq, ::prost::Message)]
    pub struct ContributionInfo {
        ///
        #[prost(int64, tag = "1")]
        pub grade: i64,
    }
    impl ::prost::Name for ContributionInfo {
        const NAME: &'static str = "ContributionInfo";
        const PACKAGE: &'static str = "bilibili.live.xuserreward.v1";
        fn full_name() -> ::prost::alloc::string::String {
            "bilibili.live.xuserreward.v1.InteractWord.ContributionInfo".into()
        }
        fn type_url() -> ::prost::alloc::string::String {
            "/bilibili.live.xuserreward.v1.InteractWord.ContributionInfo".into()
        }
    }
    ///
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct ContributionInfoV2 {
        ///
        #[prost(int64, tag = "1")]
        pub grade: i64,
        ///
        #[prost(string, tag = "2")]
        pub rank_type: ::prost::alloc::string::String,
        ///
        #[prost(string, tag = "3")]
        pub text: ::prost::alloc::string::String,
    }
    impl ::prost::Name for ContributionInfoV2 {
        const NAME: &'static str = "ContributionInfoV2";
        const PACKAGE: &'static str = "bilibili.live.xuserreward.v1";
        fn full_name() -> ::prost::alloc::string::String {
            "bilibili.live.xuserreward.v1.InteractWord.ContributionInfoV2".into()
        }
        fn type_url() -> ::prost::alloc::string::String {
            "/bilibili.live.xuserreward.v1.InteractWord.ContributionInfoV2".into()
        }
    }
    ///
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct FansMedalInfo {
        ///
        #[prost(int64, tag = "1")]
        pub target_id: i64,
        ///
        #[prost(int64, tag = "2")]
        pub medal_level: i64,
        ///
        #[prost(string, tag = "3")]
        pub medal_name: ::prost::alloc::string::String,
        ///
        #[prost(int64, tag = "4")]
        pub medal_color: i64,
        ///
        #[prost(int64, tag = "5")]
        pub medal_color_start: i64,
        ///
        #[prost(int64, tag = "6")]
        pub medal_color_end: i64,
        ///
        #[prost(int64, tag = "7")]
        pub medal_color_border: i64,
        ///
        #[prost(int64, tag = "8")]
        pub is_lighted: i64,
        ///
        #[prost(int64, tag = "9")]
        pub guard_level: i64,
        ///
        #[prost(string, tag = "10")]
        pub special: ::prost::alloc::string::String,
        ///
        #[prost(int64, tag = "11")]
        pub icon_id: i64,
        ///
        #[prost(int64, tag = "12")]
        pub anchor_roomid: i64,
        ///
        #[prost(int64, tag = "13")]
        pub score: i64,
    }
    impl ::prost::Name for FansMedalInfo {
        const NAME: &'static str = "FansMedalInfo";
        const PACKAGE: &'static str = "bilibili.live.xuserreward.v1";
        fn full_name() -> ::prost::alloc::string::String {
            "bilibili.live.xuserreward.v1.InteractWord.FansMedalInfo".into()
        }
        fn type_url() -> ::prost::alloc::string::String {
            "/bilibili.live.xuserreward.v1.InteractWord.FansMedalInfo".into()
        }
    }
    ///
    #[derive(Clone, PartialEq, ::prost::Message)]
    pub struct UserAnchorRelation {
        ///
        #[prost(string, tag = "1")]
        pub tail_icon: ::prost::alloc::string::String,
        ///
        #[prost(string, tag = "2")]
        pub tail_guide_text: ::prost::alloc::string::String,
        ///
        #[prost(int64, tag = "3")]
        pub tail_type: i64,
    }
    impl ::prost::Name for UserAnchorRelation {
        const NAME: &'static str = "UserAnchorRelation";
        const PACKAGE: &'static str = "bilibili.live.xuserreward.v1";
        fn full_name() -> ::prost::alloc::string::String {
            "bilibili.live.xuserreward.v1.InteractWord.UserAnchorRelation".into()
        }
        fn type_url() -> ::prost::alloc::string::String {
            "/bilibili.live.xuserreward.v1.InteractWord.UserAnchorRelation".into()
        }
    }
}
impl ::prost::Name for InteractWord {
    const NAME: &'static str = "InteractWord";
    const PACKAGE: &'static str = "bilibili.live.xuserreward.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.live.xuserreward.v1.InteractWord".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.live.xuserreward.v1.InteractWord".into()
    }
}
