// This file is @generated by prost-build.
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Locale {
    ///
    #[prost(message, optional, tag = "1")]
    pub c_locale: ::core::option::Option<LocaleIds>,
    ///
    #[prost(message, optional, tag = "2")]
    pub s_locale: ::core::option::Option<LocaleIds>,
    ///
    #[prost(string, tag = "3")]
    pub sim_code: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub timezone: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub utc_offset: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "6")]
    pub is_daylight_time: bool,
    ///
    #[prost(bool, tag = "7")]
    pub always_translate: bool,
}
impl ::prost::Name for Locale {
    const NAME: &'static str = "Locale";
    const PACKAGE: &'static str = "bilibili.metadata.locale";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.metadata.locale.Locale".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.metadata.locale.Locale".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LocaleIds {
    ///
    #[prost(string, tag = "1")]
    pub language: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub script: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub region: ::prost::alloc::string::String,
}
impl ::prost::Name for LocaleIds {
    const NAME: &'static str = "LocaleIds";
    const PACKAGE: &'static str = "bilibili.metadata.locale";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.metadata.locale.LocaleIds".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.metadata.locale.LocaleIds".into()
    }
}
