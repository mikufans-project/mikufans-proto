// This file is @generated by prost-build.
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdAutoPlayVideoDto {
    ///
    #[prost(int64, tag = "1")]
    pub avid: i64,
    ///
    #[prost(int64, tag = "2")]
    pub cid: i64,
    ///
    #[prost(int64, tag = "3")]
    pub page: i64,
    ///
    #[prost(string, tag = "4")]
    pub from: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub cover: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "7")]
    pub auto_play: bool,
    ///
    #[prost(bool, tag = "8")]
    pub btn_dyc_color: bool,
    ///
    #[prost(int32, tag = "9")]
    pub btn_dyc_time: i32,
    ///
    #[prost(int64, tag = "10")]
    pub biz_id: i64,
    ///
    #[prost(string, repeated, tag = "11")]
    pub process0_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "12")]
    pub play3_s_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "13")]
    pub play5_s_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(int32, tag = "14")]
    pub orientation: i32,
    ///
    #[prost(string, tag = "15")]
    pub from_spmid: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "16")]
    pub auto_play_value: i32,
    ///
    #[prost(int32, tag = "17")]
    pub height: i32,
    ///
    #[prost(int32, tag = "18")]
    pub width: i32,
    ///
    #[prost(message, repeated, tag = "19")]
    pub custom_play_urls: ::prost::alloc::vec::Vec<CustomPlayUrl>,
    ///
    #[prost(string, repeated, tag = "20")]
    pub play10_s_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "21")]
    pub play15_s_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "22")]
    pub process1_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "23")]
    pub process2_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "24")]
    pub process3_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "25")]
    pub process4_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "26")]
    pub play0_s_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
impl ::prost::Name for AdAutoPlayVideoDto {
    const NAME: &'static str = "AdAutoPlayVideoDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdAutoPlayVideoDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdAutoPlayVideoDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdBusinessMarkDto {
    ///
    #[prost(int32, tag = "1")]
    pub r#type: i32,
    ///
    #[prost(string, tag = "2")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub text_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub text_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub bg_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub bg_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub border_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "8")]
    pub border_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "9")]
    pub img_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "10")]
    pub img_height: i32,
    ///
    #[prost(int32, tag = "11")]
    pub img_width: i32,
    ///
    #[prost(string, tag = "12")]
    pub bg_border_color: ::prost::alloc::string::String,
}
impl ::prost::Name for AdBusinessMarkDto {
    const NAME: &'static str = "AdBusinessMarkDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdBusinessMarkDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdBusinessMarkDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdButtonDto {
    ///
    #[prost(int32, tag = "1")]
    pub r#type: i32,
    ///
    #[prost(string, tag = "2")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub jump_url: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "4")]
    pub report_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, tag = "5")]
    pub dlsuc_callup_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "6")]
    pub game_id: i32,
    ///
    #[prost(string, tag = "7")]
    pub game_monitor_param: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "8")]
    pub game_channel_id: i32,
    ///
    #[prost(string, tag = "9")]
    pub game_channel_extra: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "10")]
    pub callup_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "11")]
    pub game_sourcefrom: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "12")]
    pub show_game_custom_text: bool,
    ///
    #[prost(string, tag = "13")]
    pub dlsuc_callup_text: ::prost::alloc::string::String,
}
impl ::prost::Name for AdButtonDto {
    const NAME: &'static str = "AdButtonDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdButtonDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdButtonDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdCardCalenderInfo {
    ///
    #[prost(string, tag = "1")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "2")]
    pub start_time: i64,
    ///
    #[prost(int64, tag = "3")]
    pub end_time: i64,
    ///
    #[prost(int32, tag = "4")]
    pub calender_id: i32,
    ///
    #[prost(string, tag = "5")]
    pub comment: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub calendar_id_str: ::prost::alloc::string::String,
}
impl ::prost::Name for AdCardCalenderInfo {
    const NAME: &'static str = "AdCardCalenderInfo";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdCardCalenderInfo".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdCardCalenderInfo".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdCardDto {
    ///
    #[prost(int32, tag = "1")]
    pub card_type: i32,
    ///
    #[prost(string, tag = "2")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub desc: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub extra_desc: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub long_desc: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub short_title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub danmu_title: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "8")]
    pub danmu_height: i32,
    ///
    #[prost(int32, tag = "9")]
    pub danmu_width: i32,
    ///
    #[prost(int32, tag = "10")]
    pub danmu_life: i32,
    ///
    #[prost(int32, tag = "11")]
    pub danmu_begin: i32,
    ///
    #[prost(string, tag = "12")]
    pub danmu_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "13")]
    pub danmu_h5_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "14")]
    pub danmu_icon: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "15")]
    pub fold_time: i32,
    ///
    #[prost(string, tag = "16")]
    pub ad_tag: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "17")]
    pub covers: ::prost::alloc::vec::Vec<AdCoverDto>,
    ///
    #[prost(string, tag = "18")]
    pub jump_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "19")]
    pub imax_landing_page_json_string: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "20")]
    pub callup_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "21")]
    pub universal_app: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "22")]
    pub ori_price: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "23")]
    pub cur_price: i32,
    ///
    #[prost(string, tag = "24")]
    pub price_desc: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "25")]
    pub price_symbol: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "26")]
    pub goods_cur_price: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "27")]
    pub goods_ori_price: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "28")]
    pub good: ::core::option::Option<AdGoodDto>,
    ///
    #[prost(int32, tag = "29")]
    pub rank: i32,
    ///
    #[prost(int32, tag = "30")]
    pub hot_score: i32,
    ///
    #[prost(message, optional, tag = "31")]
    pub button: ::core::option::Option<AdButtonDto>,
    ///
    #[prost(string, tag = "32")]
    pub adver_logo: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "33")]
    pub adver_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "34")]
    pub adver_page_url: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "35")]
    pub video_barrage: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(message, optional, tag = "36")]
    pub ad_tag_style: ::core::option::Option<AdBusinessMarkDto>,
    ///
    #[prost(message, optional, tag = "37")]
    pub video: ::core::option::Option<AdAutoPlayVideoDto>,
    ///
    #[prost(message, optional, tag = "38")]
    pub feedback_panel: ::core::option::Option<AdFeedbackPanelDto>,
    ///
    #[prost(int64, tag = "39")]
    pub adver_mid: i64,
    ///
    #[prost(int64, tag = "40")]
    pub adver_account_id: i64,
    ///
    #[prost(string, tag = "41")]
    pub duration: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "42")]
    pub quality_infos: ::prost::alloc::vec::Vec<QualityInfo>,
    ///
    #[prost(string, tag = "43")]
    pub dynamic_text: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "44")]
    pub adver: ::core::option::Option<AdverDto>,
    ///
    #[prost(int32, tag = "45")]
    pub grade_level: i32,
    ///
    #[prost(bool, tag = "46")]
    pub support_transition: bool,
    ///
    #[prost(string, tag = "47")]
    pub transition: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "48")]
    pub under_player_interaction_style: i32,
    ///
    #[prost(string, tag = "49")]
    pub imax_landing_page_v2: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "50")]
    pub subcard_module: ::core::option::Option<SubCardModule>,
    ///
    #[prost(int32, tag = "51")]
    pub grade_denominator: i32,
    ///
    #[prost(int32, tag = "52")]
    pub star_level: i32,
    ///
    #[prost(message, optional, tag = "53")]
    pub bulletin: ::core::option::Option<Bulletin>,
    ///
    #[prost(message, optional, tag = "54")]
    pub gift: ::core::option::Option<Gift>,
    ///
    #[prost(string, repeated, tag = "55")]
    pub game_tags: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(int32, tag = "56")]
    pub ori_mark_hidden: i32,
    ///
    #[prost(bool, tag = "57")]
    pub use_multi_cover: bool,
    ///
    #[prost(message, optional, tag = "58")]
    pub wx_program_info: ::core::option::Option<WxProgramInfo>,
    ///
    #[prost(message, optional, tag = "59")]
    pub android_game_page_res: ::core::option::Option<AndroidGamePageRes>,
    ///
    #[prost(message, optional, tag = "60")]
    pub not_clickable_area: ::core::option::Option<NotClickableArea>,
    ///
    #[prost(message, optional, tag = "61")]
    pub forward_reply: ::core::option::Option<ForwardReply>,
    ///
    #[prost(string, tag = "62")]
    pub av_content: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "63")]
    pub anim_in_enable: i32,
    ///
    #[prost(string, tag = "64")]
    pub extra_params: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "65")]
    pub goods_item_id: i64,
    ///
    #[prost(int32, tag = "66")]
    pub card_style: i32,
    ///
    #[prost(message, optional, tag = "67")]
    pub game_info: ::core::option::Option<GameInfo>,
    ///
    #[prost(message, optional, tag = "68")]
    pub left_cover_badge_new_style: ::core::option::Option<LeftCoverBadgeNewStyle>,
    ///
    #[prost(message, optional, tag = "69")]
    pub game_rank: ::core::option::Option<GameRank>,
    ///
    #[prost(string, tag = "70")]
    pub game_rating: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "71")]
    pub rcmd_reason_style: ::core::option::Option<FeedsRcmdReasonStyle>,
    ///
    #[prost(int32, tag = "72")]
    pub underframe_card_style: i32,
    ///
    #[prost(string, tag = "73")]
    pub lottery_text: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "74")]
    pub calender_info: ::core::option::Option<AdCardCalenderInfo>,
    ///
    #[prost(int32, tag = "75")]
    pub half_panel_interaction_style: i32,
    ///
    #[prost(int32, tag = "76")]
    pub half_panel_content_type: i32,
    ///
    #[prost(message, optional, tag = "77")]
    pub story_anchor: ::core::option::Option<StoryAnchor>,
    ///
    #[prost(int32, tag = "78")]
    pub jump_interaction_style: i32,
    ///
    #[prost(string, tag = "79")]
    pub warm_up_text: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "80")]
    pub live_page_type: i32,
    ///
    #[prost(int32, tag = "81")]
    pub playpage_card_style: i32,
    ///
    #[prost(message, optional, tag = "82")]
    pub app_download_style: ::core::option::Option<AppDownloadStyle>,
    ///
    #[prost(message, repeated, tag = "83")]
    pub desc_list: ::prost::alloc::vec::Vec<Text>,
    ///
    #[prost(string, tag = "84")]
    pub product_source: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "85")]
    pub coupon_desc: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "86")]
    pub coupon_price: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "87")]
    pub volume_desc: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "88")]
    pub labels: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(int32, tag = "89")]
    pub item_source: i32,
    ///
    #[prost(int32, tag = "90")]
    pub underframe_icon_type: i32,
}
impl ::prost::Name for AdCardDto {
    const NAME: &'static str = "AdCardDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdCardDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdCardDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdContentExtraDto {
    ///
    #[prost(string, tag = "1")]
    pub layout: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "2")]
    pub show_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "3")]
    pub click_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "4")]
    pub danmu_list_show_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "5")]
    pub danmu_list_click_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "6")]
    pub danmu_detail_show_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "7")]
    pub danmu_trolley_add_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(bool, tag = "8")]
    pub use_ad_web_v2: bool,
    ///
    #[prost(string, repeated, tag = "9")]
    pub open_whitelist: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(message, repeated, tag = "10")]
    pub download_whitelist: ::prost::alloc::vec::Vec<AppPackageDto>,
    ///
    #[prost(message, optional, tag = "11")]
    pub card: ::core::option::Option<AdCardDto>,
    ///
    #[prost(int32, tag = "12")]
    pub report_time: i32,
    ///
    #[prost(int32, tag = "13")]
    pub appstore_priority: i32,
    ///
    #[prost(int32, tag = "14")]
    pub sales_type: i32,
    ///
    #[prost(int32, tag = "15")]
    pub preload_landingpage: i32,
    ///
    #[prost(bool, tag = "16")]
    pub special_industry: bool,
    ///
    #[prost(string, tag = "17")]
    pub special_industry_tips: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "18")]
    pub enable_download_dialog: bool,
    ///
    #[prost(bool, tag = "19")]
    pub enable_share: bool,
    ///
    #[prost(int32, tag = "20")]
    pub upzone_entrance_type: i32,
    ///
    #[prost(int32, tag = "21")]
    pub upzone_entrance_report_id: i32,
    ///
    #[prost(message, optional, tag = "22")]
    pub share_info: ::core::option::Option<AdShareInfoDto>,
    ///
    #[prost(string, tag = "23")]
    pub topview_pic_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "24")]
    pub topview_video_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "25")]
    pub click_area: i32,
    ///
    #[prost(int64, tag = "26")]
    pub shop_id: i64,
    ///
    #[prost(int64, tag = "27")]
    pub up_mid: i64,
    ///
    #[prost(string, tag = "28")]
    pub track_id: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "29")]
    pub enable_store_direct_launch: i32,
    ///
    #[prost(int64, tag = "30")]
    pub product_id: i64,
    ///
    #[prost(bool, tag = "31")]
    pub enable_double_jump: bool,
    ///
    #[prost(string, repeated, tag = "32")]
    pub show1_s_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, tag = "33")]
    pub from_track_id: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "34")]
    pub store_callup_card: bool,
    ///
    #[prost(int32, tag = "35")]
    pub landingpage_download_style: i32,
    ///
    #[prost(int32, tag = "36")]
    pub special_industry_style: i32,
    ///
    #[prost(bool, tag = "37")]
    pub enable_h5_alert: bool,
    ///
    #[prost(int32, tag = "38")]
    pub macro_replace_priority: i32,
    ///
    #[prost(int32, tag = "39")]
    pub feedback_panel_style: i32,
    ///
    #[prost(string, tag = "40")]
    pub appstore_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "41")]
    pub enable_h5_pre_load: i32,
    ///
    #[prost(string, tag = "42")]
    pub h5_pre_load_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "43")]
    pub cm_from_track_id: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "44")]
    pub abtest: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "45")]
    pub download_url_type: i32,
    ///
    #[prost(int32, tag = "46")]
    pub enable_auto_callup: i32,
    ///
    #[prost(string, tag = "47")]
    pub external_link_warning: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "48")]
    pub live_booking_id: i64,
    ///
    #[prost(string, tag = "49")]
    pub store_dplink_xiaomi: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "50")]
    pub lottery_id: i64,
    ///
    #[prost(bool, tag = "51")]
    pub enable_openapk_dialog: bool,
    ///
    #[prost(message, repeated, tag = "52")]
    pub live_booking_infos: ::prost::alloc::vec::Vec<LiveBookInfoDto>,
    ///
    #[prost(int32, tag = "53")]
    pub user_cancel_jump_type: i32,
    ///
    #[prost(string, tag = "54")]
    pub user_cancel_jump_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "55")]
    pub app_exp_params: ::prost::alloc::string::String,
}
impl ::prost::Name for AdContentExtraDto {
    const NAME: &'static str = "AdContentExtraDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdContentExtraDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdContentExtraDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdCoverDto {
    ///
    #[prost(string, tag = "1")]
    pub url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "2")]
    pub r#loop: i32,
    ///
    #[prost(string, tag = "3")]
    pub jump_url: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "4")]
    pub report_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(int32, tag = "5")]
    pub image_height: i32,
    ///
    #[prost(int32, tag = "6")]
    pub image_width: i32,
    ///
    #[prost(string, tag = "7")]
    pub night_url: ::prost::alloc::string::String,
}
impl ::prost::Name for AdCoverDto {
    const NAME: &'static str = "AdCoverDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdCoverDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdCoverDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdDto {
    ///
    #[prost(int64, tag = "1")]
    pub creative_id: i64,
    ///
    #[prost(string, tag = "2")]
    pub ad_cb: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "3")]
    pub extra: ::core::option::Option<AdContentExtraDto>,
    ///
    #[prost(int32, tag = "4")]
    pub cm_mark: i32,
    ///
    #[prost(int64, tag = "5")]
    pub top_view_id: i64,
    ///
    #[prost(int32, tag = "6")]
    pub creative_type: i32,
    ///
    #[prost(int32, tag = "7")]
    pub card_type: i32,
    ///
    #[prost(int32, tag = "8")]
    pub creative_style: i32,
    ///
    #[prost(bool, tag = "9")]
    pub is_ad: bool,
    ///
    #[prost(message, optional, tag = "10")]
    pub creative_content: ::core::option::Option<CreativeDto>,
}
impl ::prost::Name for AdDto {
    const NAME: &'static str = "AdDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdFeedbackPanelDto {
    ///
    #[prost(string, tag = "1")]
    pub panel_type_text: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "2")]
    pub feedback_panel_detail: ::prost::alloc::vec::Vec<AdFeedbackPanelModuleDto>,
    ///
    #[prost(string, tag = "3")]
    pub toast: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub open_rec_tips: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub close_rec_tips: ::prost::alloc::string::String,
}
impl ::prost::Name for AdFeedbackPanelDto {
    const NAME: &'static str = "AdFeedbackPanelDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdFeedbackPanelDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdFeedbackPanelDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdFeedbackPanelModuleDto {
    ///
    #[prost(int32, tag = "1")]
    pub module_id: i32,
    ///
    #[prost(string, tag = "2")]
    pub icon_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "3")]
    pub jump_type: i32,
    ///
    #[prost(string, tag = "4")]
    pub jump_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "6")]
    pub secondary_panel: ::prost::alloc::vec::Vec<AdSecondFeedbackPanelDto>,
    ///
    #[prost(string, tag = "7")]
    pub sub_text: ::prost::alloc::string::String,
}
impl ::prost::Name for AdFeedbackPanelModuleDto {
    const NAME: &'static str = "AdFeedbackPanelModuleDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdFeedbackPanelModuleDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdFeedbackPanelModuleDto".into()
    }
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AdGoodDto {
    ///
    #[prost(int64, tag = "1")]
    pub item_id: i64,
    ///
    #[prost(int64, tag = "2")]
    pub sku_id: i64,
    ///
    #[prost(int64, tag = "3")]
    pub shop_id: i64,
    ///
    #[prost(int64, tag = "4")]
    pub sku_num: i64,
}
impl ::prost::Name for AdGoodDto {
    const NAME: &'static str = "AdGoodDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdGoodDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdGoodDto".into()
    }
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct AdOgvEpDto {
    ///
    #[prost(int64, tag = "1")]
    pub epid: i64,
    ///
    #[prost(bool, tag = "2")]
    pub has_recommend: bool,
}
impl ::prost::Name for AdOgvEpDto {
    const NAME: &'static str = "AdOgvEpDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdOgvEpDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdOgvEpDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdSecondFeedbackPanelDto {
    ///
    #[prost(int32, tag = "1")]
    pub reason_id: i32,
    ///
    #[prost(string, tag = "2")]
    pub text: ::prost::alloc::string::String,
}
impl ::prost::Name for AdSecondFeedbackPanelDto {
    const NAME: &'static str = "AdSecondFeedbackPanelDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdSecondFeedbackPanelDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdSecondFeedbackPanelDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdShareInfoDto {
    ///
    #[prost(string, tag = "1")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub subtitle: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub image_url: ::prost::alloc::string::String,
}
impl ::prost::Name for AdShareInfoDto {
    const NAME: &'static str = "AdShareInfoDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdShareInfoDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdShareInfoDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdsControlDto {
    ///
    #[prost(int32, tag = "1")]
    pub has_danmu: i32,
    ///
    #[prost(int64, repeated, tag = "2")]
    pub cids: ::prost::alloc::vec::Vec<i64>,
    ///
    #[prost(message, repeated, tag = "3")]
    pub eps: ::prost::alloc::vec::Vec<AdOgvEpDto>,
    ///
    #[prost(int32, tag = "4")]
    pub under_player_scroller_seconds: i32,
    ///
    #[prost(bool, tag = "5")]
    pub vip_skipped_ad: bool,
    ///
    #[prost(bool, tag = "6")]
    pub has_live_booking_ad: bool,
    ///
    #[prost(int32, tag = "7")]
    pub under_player_banner_mode: i32,
}
impl ::prost::Name for AdsControlDto {
    const NAME: &'static str = "AdsControlDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdsControlDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdsControlDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AdverDto {
    ///
    #[prost(int64, tag = "1")]
    pub adver_id: i64,
    ///
    #[prost(string, tag = "2")]
    pub adver_logo: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub adver_name: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "4")]
    pub adver_type: i32,
    ///
    #[prost(string, tag = "5")]
    pub adver_page_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub adver_desc: ::prost::alloc::string::String,
}
impl ::prost::Name for AdverDto {
    const NAME: &'static str = "AdverDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AdverDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AdverDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AndroidGamePageRes {
    ///
    #[prost(message, optional, tag = "1")]
    pub module1: ::core::option::Option<Module1>,
    ///
    #[prost(message, optional, tag = "2")]
    pub module3: ::core::option::Option<Module3>,
    ///
    #[prost(message, optional, tag = "3")]
    pub module4: ::core::option::Option<Module4>,
    ///
    #[prost(message, optional, tag = "4")]
    pub module5: ::core::option::Option<Module5>,
    ///
    #[prost(message, optional, tag = "5")]
    pub module6: ::core::option::Option<Module6>,
    ///
    #[prost(message, optional, tag = "6")]
    pub module7: ::core::option::Option<Module7>,
    ///
    #[prost(message, optional, tag = "7")]
    pub module8: ::core::option::Option<Module8>,
    ///
    #[prost(message, optional, tag = "8")]
    pub module9: ::core::option::Option<Module9>,
    ///
    #[prost(message, optional, tag = "9")]
    pub module10: ::core::option::Option<Module10>,
    ///
    #[prost(message, optional, tag = "10")]
    pub module11: ::core::option::Option<Module11>,
    ///
    #[prost(message, optional, tag = "11")]
    pub module12: ::core::option::Option<Module12>,
    ///
    #[prost(message, optional, tag = "12")]
    pub module13: ::core::option::Option<Module13>,
    ///
    #[prost(int32, repeated, tag = "13")]
    pub module_seq: ::prost::alloc::vec::Vec<i32>,
    ///
    #[prost(string, tag = "14")]
    pub background_color: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "15")]
    pub module14: ::core::option::Option<Module14>,
}
impl ::prost::Name for AndroidGamePageRes {
    const NAME: &'static str = "AndroidGamePageRes";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AndroidGamePageRes".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AndroidGamePageRes".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AndroidTag {
    ///
    #[prost(string, tag = "1")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "2")]
    pub r#type: i32,
}
impl ::prost::Name for AndroidTag {
    const NAME: &'static str = "AndroidTag";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AndroidTag".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AndroidTag".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AppDownloadStyle {
    ///
    #[prost(int32, tag = "1")]
    pub style: i32,
    ///
    #[prost(string, repeated, tag = "2")]
    pub tags: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, tag = "3")]
    pub guide_text: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "4")]
    pub head_imgs: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, repeated, tag = "5")]
    pub detail_imgs: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(int32, tag = "6")]
    pub detail_img_layout: i32,
    ///
    #[prost(string, tag = "7")]
    pub detail_text: ::prost::alloc::string::String,
}
impl ::prost::Name for AppDownloadStyle {
    const NAME: &'static str = "AppDownloadStyle";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AppDownloadStyle".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AppDownloadStyle".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct AppPackageDto {
    ///
    #[prost(int64, tag = "1")]
    pub size: i64,
    ///
    #[prost(string, tag = "2")]
    pub display_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub apk_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub bili_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub md5: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "8")]
    pub dev_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "9")]
    pub auth_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "10")]
    pub auth_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "11")]
    pub version: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "12")]
    pub update_time: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "13")]
    pub privacy_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "14")]
    pub privacy_url: ::prost::alloc::string::String,
}
impl ::prost::Name for AppPackageDto {
    const NAME: &'static str = "AppPackageDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.AppPackageDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.AppPackageDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Bulletin {
    ///
    #[prost(string, tag = "1")]
    pub tag_text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub text: ::prost::alloc::string::String,
}
impl ::prost::Name for Bulletin {
    const NAME: &'static str = "Bulletin";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Bulletin".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Bulletin".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Comment {
    ///
    #[prost(int64, tag = "1")]
    pub game_base_id: i64,
    ///
    #[prost(string, tag = "2")]
    pub user_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub user_face: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "4")]
    pub user_level: i32,
    ///
    #[prost(string, tag = "5")]
    pub comment_no: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "6")]
    pub grade: i32,
    ///
    #[prost(string, tag = "7")]
    pub content: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "8")]
    pub up_count: i32,
}
impl ::prost::Name for Comment {
    const NAME: &'static str = "Comment";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Comment".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Comment".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CreativeDto {
    ///
    #[prost(string, tag = "1")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub description: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub image_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub image_md5: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub click_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub show_url: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "8")]
    pub video_id: i64,
    ///
    #[prost(string, tag = "9")]
    pub thumbnail_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "10")]
    pub thumbnail_url_md5: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "11")]
    pub logo_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "12")]
    pub logo_md5: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "13")]
    pub username: ::prost::alloc::string::String,
}
impl ::prost::Name for CreativeDto {
    const NAME: &'static str = "CreativeDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.CreativeDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.CreativeDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CustomPlayUrl {
    ///
    #[prost(int32, tag = "1")]
    pub play_time: i32,
    ///
    #[prost(string, repeated, tag = "2")]
    pub urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
impl ::prost::Name for CustomPlayUrl {
    const NAME: &'static str = "CustomPlayUrl";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.CustomPlayUrl".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.CustomPlayUrl".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FeedsRcmdReasonStyle {
    ///
    #[prost(string, tag = "1")]
    pub bg_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub bg_color_night: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "3")]
    pub bg_style: i32,
    ///
    #[prost(string, tag = "4")]
    pub border_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub border_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub text_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub text_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "8")]
    pub text: ::prost::alloc::string::String,
}
impl ::prost::Name for FeedsRcmdReasonStyle {
    const NAME: &'static str = "FeedsRcmdReasonStyle";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.FeedsRcmdReasonStyle".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.FeedsRcmdReasonStyle".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ForwardReply {
    ///
    #[prost(int64, tag = "1")]
    pub comment_id: i64,
    ///
    #[prost(string, tag = "2")]
    pub message: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub highlight_text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub highlight_prefix_icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub callup_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub jump_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "7")]
    pub jump_type: i32,
    ///
    #[prost(string, tag = "8")]
    pub author_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "9")]
    pub author_icon: ::prost::alloc::string::String,
}
impl ::prost::Name for ForwardReply {
    const NAME: &'static str = "ForwardReply";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.ForwardReply".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.ForwardReply".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct FullText {
    ///
    #[prost(string, tag = "1")]
    pub icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub icon_for_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub jump_uri: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub prefix: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub text: ::prost::alloc::string::String,
}
impl ::prost::Name for FullText {
    const NAME: &'static str = "FullText";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.FullText".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.FullText".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GameInfo {
    ///
    #[prost(string, tag = "1")]
    pub game_logo: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub game_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub game_desc: ::prost::alloc::string::String,
}
impl ::prost::Name for GameInfo {
    const NAME: &'static str = "GameInfo";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.GameInfo".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.GameInfo".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GameRank {
    ///
    #[prost(string, tag = "1")]
    pub icon_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub night_icon_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub bkg_night_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub bkg_day_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub font_night_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub font_day_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub rank_content: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "8")]
    pub rank_link: ::prost::alloc::string::String,
}
impl ::prost::Name for GameRank {
    const NAME: &'static str = "GameRank";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.GameRank".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.GameRank".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Gift {
    ///
    #[prost(string, tag = "1")]
    pub icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub night_icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub url: ::prost::alloc::string::String,
}
impl ::prost::Name for Gift {
    const NAME: &'static str = "Gift";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Gift".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Gift".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct GiftCardInfo {
    ///
    #[prost(string, tag = "1")]
    pub desc: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "2")]
    pub icon_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
impl ::prost::Name for GiftCardInfo {
    const NAME: &'static str = "GiftCardInfo";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.GiftCardInfo".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.GiftCardInfo".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct IosGamePageRes {
    ///
    #[prost(string, tag = "1")]
    pub logo: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub sub_titile: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "4")]
    pub image_url: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, tag = "5")]
    pub desc: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "6")]
    pub game_button: ::core::option::Option<AdButtonDto>,
    ///
    #[prost(double, tag = "7")]
    pub grade: f64,
    ///
    #[prost(string, tag = "8")]
    pub rank_num: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "9")]
    pub rank_name: ::prost::alloc::string::String,
}
impl ::prost::Name for IosGamePageRes {
    const NAME: &'static str = "IosGamePageRes";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.IosGamePageRes".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.IosGamePageRes".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LeftCoverBadgeNewStyle {
    ///
    #[prost(string, tag = "1")]
    pub icon_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub icon_night_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "3")]
    pub icon_width: i32,
    ///
    #[prost(int32, tag = "4")]
    pub icon_height: i32,
}
impl ::prost::Name for LeftCoverBadgeNewStyle {
    const NAME: &'static str = "LeftCoverBadgeNewStyle";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.LeftCoverBadgeNewStyle".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.LeftCoverBadgeNewStyle".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct LiveBookInfoDto {
    ///
    #[prost(int64, tag = "1")]
    pub live_booking_id: i64,
    ///
    #[prost(message, optional, tag = "2")]
    pub calender_info: ::core::option::Option<AdCardCalenderInfo>,
    ///
    #[prost(int32, tag = "3")]
    pub live_page_type: i32,
}
impl ::prost::Name for LiveBookInfoDto {
    const NAME: &'static str = "LiveBookInfoDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.LiveBookInfoDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.LiveBookInfoDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module1 {
    ///
    #[prost(string, tag = "1")]
    pub game_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub game_icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub developer_input_name: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "4")]
    pub tag_list: ::prost::alloc::vec::Vec<AndroidTag>,
}
impl ::prost::Name for Module1 {
    const NAME: &'static str = "Module1";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module1".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module1".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module10 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(string, tag = "2")]
    pub latest_update: ::prost::alloc::string::String,
}
impl ::prost::Name for Module10 {
    const NAME: &'static str = "Module10";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module10".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module10".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module11 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(int32, repeated, tag = "2")]
    pub star_number_list: ::prost::alloc::vec::Vec<i32>,
    ///
    #[prost(string, tag = "3")]
    pub comment_str: ::prost::alloc::string::String,
    ///
    #[prost(double, tag = "4")]
    pub grade: f64,
}
impl ::prost::Name for Module11 {
    const NAME: &'static str = "Module11";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module11".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module11".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module12 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(message, repeated, tag = "2")]
    pub comment_list: ::prost::alloc::vec::Vec<Comment>,
    ///
    #[prost(string, tag = "3")]
    pub comment_num: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "4")]
    pub show_all_comment: bool,
}
impl ::prost::Name for Module12 {
    const NAME: &'static str = "Module12";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module12".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module12".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module13 {
    ///
    #[prost(int64, tag = "1")]
    pub pkg_size: i64,
    ///
    #[prost(string, tag = "2")]
    pub customer_service: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub website: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub authority: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub privacy: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub developer_name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub update_time: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "8")]
    pub game_version: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "9")]
    pub android_pkg_name: ::prost::alloc::string::String,
}
impl ::prost::Name for Module13 {
    const NAME: &'static str = "Module13";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module13".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module13".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module14 {
    ///
    #[prost(message, repeated, tag = "1")]
    pub reward_list: ::prost::alloc::vec::Vec<Reward>,
    ///
    #[prost(bool, tag = "2")]
    pub display: bool,
}
impl ::prost::Name for Module14 {
    const NAME: &'static str = "Module14";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module14".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module14".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module3 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(message, repeated, tag = "3")]
    pub quality_params: ::prost::alloc::vec::Vec<QualityParmas>,
}
impl ::prost::Name for Module3 {
    const NAME: &'static str = "Module3";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module3".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module3".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module4 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(int32, tag = "2")]
    pub gift_num: i32,
    ///
    #[prost(string, tag = "3")]
    pub gift_name: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "4")]
    pub gift_icon_num: i32,
    ///
    #[prost(string, repeated, tag = "5")]
    pub icon_urls: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(int64, repeated, tag = "6")]
    pub gift_info_ids: ::prost::alloc::vec::Vec<i64>,
}
impl ::prost::Name for Module4 {
    const NAME: &'static str = "Module4";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module4".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module4".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module5 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(string, tag = "2")]
    pub game_summary: ::prost::alloc::string::String,
}
impl ::prost::Name for Module5 {
    const NAME: &'static str = "Module5";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module5".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module5".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module6 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(string, tag = "2")]
    pub game_desc: ::prost::alloc::string::String,
}
impl ::prost::Name for Module6 {
    const NAME: &'static str = "Module6";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module6".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module6".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module7 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(message, repeated, tag = "2")]
    pub screen_shots: ::prost::alloc::vec::Vec<ScreenShots>,
}
impl ::prost::Name for Module7 {
    const NAME: &'static str = "Module7";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module7".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module7".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module8 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(string, repeated, tag = "2")]
    pub tag_list: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
}
impl ::prost::Name for Module8 {
    const NAME: &'static str = "Module8";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module8".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module8".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Module9 {
    ///
    #[prost(bool, tag = "1")]
    pub display: bool,
    ///
    #[prost(string, tag = "2")]
    pub dev_introduction: ::prost::alloc::string::String,
}
impl ::prost::Name for Module9 {
    const NAME: &'static str = "Module9";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Module9".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Module9".into()
    }
}
///
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct NotClickableArea {
    ///
    #[prost(int32, tag = "1")]
    pub x: i32,
    ///
    #[prost(int32, tag = "2")]
    pub y: i32,
    ///
    #[prost(int32, tag = "3")]
    pub z: i32,
}
impl ::prost::Name for NotClickableArea {
    const NAME: &'static str = "NotClickableArea";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.NotClickableArea".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.NotClickableArea".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QualityInfo {
    ///
    #[prost(string, tag = "1")]
    pub icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "3")]
    pub is_bg: bool,
    ///
    #[prost(string, tag = "4")]
    pub bg_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub bg_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub text_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub text_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "8")]
    pub user_faces: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(string, tag = "9")]
    pub icon_night: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "10")]
    pub bg_style: i32,
    ///
    #[prost(string, tag = "11")]
    pub border_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "12")]
    pub border_color_night: ::prost::alloc::string::String,
}
impl ::prost::Name for QualityInfo {
    const NAME: &'static str = "QualityInfo";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.QualityInfo".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.QualityInfo".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct QualityParmas {
    ///
    #[prost(string, tag = "1")]
    pub first_line: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub second_line: ::prost::alloc::string::String,
    ///
    #[prost(double, tag = "3")]
    pub grade: f64,
    ///
    #[prost(string, tag = "4")]
    pub rank_icon: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "5")]
    pub quality_type: i32,
}
impl ::prost::Name for QualityParmas {
    const NAME: &'static str = "QualityParmas";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.QualityParmas".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.QualityParmas".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Reward {
    ///
    #[prost(int32, tag = "1")]
    pub level: i32,
    ///
    #[prost(string, tag = "2")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub content: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub pic: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "5")]
    pub reach: bool,
}
impl ::prost::Name for Reward {
    const NAME: &'static str = "Reward";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Reward".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Reward".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct ScreenShots {
    ///
    #[prost(string, tag = "1")]
    pub url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "2")]
    pub height: i32,
    ///
    #[prost(int32, tag = "3")]
    pub width: i32,
    ///
    #[prost(int32, tag = "4")]
    pub seq: i32,
}
impl ::prost::Name for ScreenShots {
    const NAME: &'static str = "ScreenShots";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.ScreenShots".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.ScreenShots".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SourceContentDto {
    ///
    #[prost(string, tag = "1")]
    pub request_id: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "2")]
    pub source_id: i32,
    ///
    #[prost(int32, tag = "3")]
    pub resource_id: i32,
    ///
    #[prost(bool, tag = "4")]
    pub is_ad_loc: bool,
    ///
    #[prost(message, optional, tag = "5")]
    pub server_type: ::core::option::Option<i32>,
    ///
    #[prost(string, tag = "6")]
    pub client_ip: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "7")]
    pub card_index: ::core::option::Option<i32>,
    ///
    #[prost(int32, tag = "8")]
    pub index: i32,
    ///
    #[prost(message, optional, tag = "9")]
    pub ad_content: ::core::option::Option<AdDto>,
}
impl ::prost::Name for SourceContentDto {
    const NAME: &'static str = "SourceContentDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.SourceContentDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.SourceContentDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StoryAnchor {
    ///
    #[prost(int32, tag = "1")]
    pub r#type: i32,
    ///
    #[prost(message, optional, tag = "2")]
    pub story_cart_icon: ::core::option::Option<StoryCartIcon>,
    ///
    #[prost(string, tag = "3")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub desc: ::prost::alloc::string::String,
}
impl ::prost::Name for StoryAnchor {
    const NAME: &'static str = "StoryAnchor";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.StoryAnchor".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.StoryAnchor".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct StoryCartIcon {
    ///
    #[prost(string, tag = "1")]
    pub icon_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub icon_text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub icon_title: ::prost::alloc::string::String,
}
impl ::prost::Name for StoryCartIcon {
    const NAME: &'static str = "StoryCartIcon";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.StoryCartIcon".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.StoryCartIcon".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SubCardModule {
    ///
    #[prost(string, tag = "1")]
    pub subcard_type: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub desc: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub rank_stars: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub amount_number: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub avatar: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "8")]
    pub button: ::core::option::Option<AdButtonDto>,
    ///
    #[prost(message, repeated, tag = "9")]
    pub tag_infos: ::prost::alloc::vec::Vec<TagInfo>,
    ///
    #[prost(message, repeated, tag = "10")]
    pub quality_infos: ::prost::alloc::vec::Vec<QualityInfo>,
    ///
    #[prost(string, tag = "11")]
    pub star_rating: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "12")]
    pub sub_desc: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "13")]
    pub price_symbol: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "14")]
    pub goods_price: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "15")]
    pub comment_list: ::prost::alloc::vec::Vec<Comment>,
    ///
    #[prost(message, optional, tag = "16")]
    pub gift_card_info: ::core::option::Option<GiftCardInfo>,
    ///
    #[prost(string, tag = "17")]
    pub extra_img: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "18")]
    pub choose_button_list: ::prost::alloc::vec::Vec<AdButtonDto>,
    ///
    #[prost(int64, tag = "19")]
    pub component_id: i64,
    ///
    #[prost(int64, tag = "20")]
    pub pop_delay_time: i64,
    ///
    #[prost(string, tag = "21")]
    pub callup_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "22")]
    pub jump_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "23")]
    pub ad_img_tag: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "24")]
    pub full_text: ::core::option::Option<FullText>,
    ///
    #[prost(message, optional, tag = "25")]
    pub forward_reply: ::core::option::Option<ForwardReply>,
    ///
    #[prost(message, optional, tag = "26")]
    pub wx_program_info: ::core::option::Option<WxProgramInfo>,
    ///
    #[prost(string, tag = "27")]
    pub night_icon: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "28")]
    pub price_desc: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "29")]
    pub ori_price: ::prost::alloc::string::String,
}
impl ::prost::Name for SubCardModule {
    const NAME: &'static str = "SubCardModule";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.SubCardModule".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.SubCardModule".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Tab2ExtraDto {
    ///
    #[prost(string, tag = "1")]
    pub cover_url: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub title: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub desc: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "5")]
    pub button: ::core::option::Option<AdButtonDto>,
    ///
    #[prost(int32, tag = "6")]
    pub auto_animate_time_ms: i32,
    ///
    #[prost(bool, tag = "7")]
    pub enable_click: bool,
    ///
    #[prost(string, tag = "8")]
    pub panel_url: ::prost::alloc::string::String,
    ///
    #[prost(message, repeated, tag = "9")]
    pub download_whitelist: ::prost::alloc::vec::Vec<AppPackageDto>,
    ///
    #[prost(string, repeated, tag = "10")]
    pub open_whitelist: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(bool, tag = "11")]
    pub use_ad_web_v2: bool,
    ///
    #[prost(bool, tag = "12")]
    pub enable_store_direct_launch: bool,
    ///
    #[prost(int32, tag = "13")]
    pub sales_type: i32,
    ///
    #[prost(int32, tag = "15")]
    pub landingpage_download_style: i32,
    ///
    #[prost(int32, tag = "16")]
    pub appstore_priority: i32,
    ///
    #[prost(string, tag = "17")]
    pub appstore_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "18")]
    pub appstore_delay_time: i32,
    ///
    #[prost(int32, tag = "19")]
    pub page_cover_type: i32,
    ///
    #[prost(int32, tag = "20")]
    pub page_pull_type: i32,
    ///
    #[prost(message, optional, tag = "21")]
    pub android_game_page_res: ::core::option::Option<AndroidGamePageRes>,
    ///
    #[prost(message, optional, tag = "22")]
    pub ios_game_page_res: ::core::option::Option<IosGamePageRes>,
    ///
    #[prost(message, optional, tag = "23")]
    pub ad_tag_style: ::core::option::Option<AdBusinessMarkDto>,
    ///
    #[prost(message, optional, tag = "24")]
    pub feedback_panel: ::core::option::Option<AdFeedbackPanelDto>,
    ///
    #[prost(string, tag = "25")]
    pub ad_cb: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "26")]
    pub url_type: i32,
    ///
    #[prost(string, tag = "27")]
    pub av_content: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "28")]
    pub download_whitelist_mode: i32,
    ///
    #[prost(int64, tag = "29")]
    pub download_whitelist_duration: i64,
    ///
    #[prost(string, tag = "30")]
    pub abtest: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "31")]
    pub download_url_type: i32,
    ///
    #[prost(int32, tag = "32")]
    pub enable_auto_callup: i32,
    ///
    #[prost(string, tag = "33")]
    pub external_link_warning: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "34")]
    pub store_dplink_xiaomi: ::prost::alloc::string::String,
    ///
    #[prost(bool, tag = "35")]
    pub enable_openapk_dialog: bool,
}
impl ::prost::Name for Tab2ExtraDto {
    const NAME: &'static str = "Tab2ExtraDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Tab2ExtraDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Tab2ExtraDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TabExtraDto {
    ///
    #[prost(string, tag = "1")]
    pub tab_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "2")]
    pub enable_store_direct_launch: i32,
    ///
    #[prost(int32, tag = "3")]
    pub store_callup_card: i32,
    ///
    #[prost(int32, tag = "4")]
    pub sales_type: i32,
    ///
    #[prost(message, repeated, tag = "5")]
    pub download_whitelist: ::prost::alloc::vec::Vec<AppPackageDto>,
    ///
    #[prost(bool, tag = "6")]
    pub special_industry: bool,
    ///
    #[prost(string, tag = "7")]
    pub special_industry_tips: ::prost::alloc::string::String,
    ///
    #[prost(string, repeated, tag = "8")]
    pub open_whitelist: ::prost::alloc::vec::Vec<::prost::alloc::string::String>,
    ///
    #[prost(int32, tag = "9")]
    pub landingpage_download_style: i32,
    ///
    #[prost(int32, tag = "10")]
    pub appstore_priority: i32,
    ///
    #[prost(bool, tag = "11")]
    pub use_ad_web_v2: bool,
    ///
    #[prost(bool, tag = "12")]
    pub enable_download_dialog: bool,
    ///
    #[prost(string, tag = "13")]
    pub appstore_url: ::prost::alloc::string::String,
    ///
    #[prost(int32, tag = "14")]
    pub appstore_delay_time: i32,
    ///
    #[prost(string, tag = "15")]
    pub av_content: ::prost::alloc::string::String,
}
impl ::prost::Name for TabExtraDto {
    const NAME: &'static str = "TabExtraDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.TabExtraDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.TabExtraDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TabInfoDto {
    ///
    #[prost(string, tag = "1")]
    pub tab_name: ::prost::alloc::string::String,
    ///
    #[prost(message, optional, tag = "2")]
    pub extra: ::core::option::Option<::prost_types::Any>,
    ///
    #[prost(int32, tag = "3")]
    pub tab_version: i32,
}
impl ::prost::Name for TabInfoDto {
    const NAME: &'static str = "TabInfoDto";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.TabInfoDto".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.TabInfoDto".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct TagInfo {
    ///
    #[prost(string, tag = "1")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub text_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub text_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "4")]
    pub bg_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "5")]
    pub bg_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "6")]
    pub border_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "7")]
    pub border_color_night: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "8")]
    pub r#type: ::prost::alloc::string::String,
}
impl ::prost::Name for TagInfo {
    const NAME: &'static str = "TagInfo";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.TagInfo".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.TagInfo".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct Text {
    ///
    #[prost(string, tag = "1")]
    pub text: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub day_color: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub night_color: ::prost::alloc::string::String,
    ///
    #[prost(int64, tag = "4")]
    pub font_size: i64,
    ///
    #[prost(int32, tag = "5")]
    pub text_decoration: i32,
}
impl ::prost::Name for Text {
    const NAME: &'static str = "Text";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.Text".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.Text".into()
    }
}
///
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct WxProgramInfo {
    ///
    #[prost(string, tag = "1")]
    pub org_id: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "2")]
    pub name: ::prost::alloc::string::String,
    ///
    #[prost(string, tag = "3")]
    pub path: ::prost::alloc::string::String,
}
impl ::prost::Name for WxProgramInfo {
    const NAME: &'static str = "WxProgramInfo";
    const PACKAGE: &'static str = "bilibili.ad.v1";
    fn full_name() -> ::prost::alloc::string::String {
        "bilibili.ad.v1.WxProgramInfo".into()
    }
    fn type_url() -> ::prost::alloc::string::String {
        "/bilibili.ad.v1.WxProgramInfo".into()
    }
}
